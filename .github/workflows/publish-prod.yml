name: Publish Production

on:
  push:
    branches: [main]
  workflow_run:
    workflows: ["Release"]
    types: [completed]

permissions:
  contents: write

# Make the environment‐scoped NPM_TOKEN available as NODE_AUTH_TOKEN
env:
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  publish:
    runs-on: ubuntu-latest

    # ← Tie this job to your GitHub Environment named "prod"
    environment:
      name: prod
      url: https://www.npmjs.com/package/@maistik/nuxt-pdf

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.3

      - name: Setup Node.js & pnpm
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          registry-url: 'https://registry.npmjs.org/'
          always-auth: true

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Rebuild native modules
        run: pnpm rebuild

      - name: Run lint & unit tests
        run: |
          pnpm lint
          pnpm test:unit

      - name: Build
        run: pnpm build

      - name: Bump patch version
        id: bump
        run: |
          # e.g. 1.2.3 → 1.2.4 (no git tag yet)
          npm version patch --no-git-tag-version
          echo "version=$(node -p \"require('./package.json').version\")" >> $GITHUB_OUTPUT

      - name: Commit & tag release
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json pnpm-lock.yaml
          git commit -m "chore(release): v${{ steps.bump.outputs.version }}"
          git tag v${{ steps.bump.outputs.version }}
          git push origin HEAD:main --follow-tags

      - name: Configure npm for publishing
        run: |
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc

      - name: Publish to npm (latest)
        run: pnpm publish --access public --no-git-checks
